# ---------------------------------------- PRODUCTION ---------------------------------------- #
version: '3'
services:
  db: # Mysql 컨테이너
    networks:
      - app
    image: mysql:latest
    container_name: blog-backend-mysql
    restart: always
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PWD}
    volumes:
      - mysql-data:/var/lib/mysql # /var/lib/docker/volumes/blog-backend_mysql-data/_data, 호스트:컨테이너

  server: # Server 컨테이너
    networks:
      - app
    # image: ${REGISTRY_G}/${IMAGE_NAME}:main
    image: ${REGISTRY_D}/${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest
    restart: always
    container_name: blog-backend-server
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on: # Mysql 컨테이너 의존
      - db
    ports:
      - ${PORT}:${PORT}
    volumes:
      - /home/uploads/blog-backend:/app/blog-backend-server/uploads # 왼쪽 호스트, 오른쪽 컨테이너 동기화

  redis: # Redis 컨테이너
    networks:
      - app
    image: redis:latest
    container_name: blog-backend-redis
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --requirepass ${REDIS_PWD}
    volumes:
      - redis-data:/redis/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf

networks:
  app:
    driver: bridge # 두 컨테이너가 동일한 네트워크에 있어야 함

volumes:
  mysql-data:
  redis-data:

